-- AGGREGATE FUNCTIONS

SELECT * FROM startups;

SELECT count(*) AS 'total # of companies' FROM startups;

SELECT SUM(valuation) FROM startups;

SELECT MAX(raised) AS 'max raised' FROM startups;

SELECT MAX(raised) AS 'Max during seed'
FROM startups
WHERE stage = 'Seed';

SELECT MIN(founded) FROM startups;

SELECT AVG(valuation) FROM startups;

SELECT category, AVG(valuation) FROM startups
GROUP BY 1;

SELECT category, ROUND(AVG(valuation),2) FROM startups
GROUP BY 1
ORDER BY 2 DESC;

SELECT category, COUNT(*) AS 'count' FROM startups
GROUP BY category
HAVING COUNT(*) > 3;

SELECT location, AVG(employees) FROM startups
GROUP BY location
HAVING AVG(employees) > 500;

-- FUNNELS -------------------------------------------
SELECT modal_text,
  COUNT(DISTINCT CASE
    WHEN ab_group = 'control' THEN user_id
    END) AS 'control_clicks', 
    COUNT(DISTINCT CASE
         WHEN ab_group = 'variant' THEN user_id
         END) AS 'variant_clicks'
FROM onboarding_modals
GROUP BY 1
ORDER BY 1;


--FUNNEL with multiple tables-------
WITH funnels AS (
  SELECT DISTINCT b.browse_date,
     b.user_id,
     c.user_id IS NOT NULL AS 'is_checkout',
     p.user_id IS NOT NULL AS 'is_purchase'
  FROM browse AS 'b'
  LEFT JOIN checkout AS 'c'
    ON c.user_id = b.user_id
  LEFT JOIN purchase AS 'p'
    ON p.user_id = c.user_id)
SELECT browse_date, COUNT(*) AS 'num_browse',
   SUM(is_checkout) AS 'num_checkout',
   SUM(is_purchase) AS 'num_purchase',
   1.0 * SUM(is_checkout) / COUNT(user_id) AS 'browse_to_checkout',
   1.0 * SUM(is_purchase) / SUM(is_checkout) AS 'checkout_to_purchase'
FROM funnels
GROUP BY browse_date
ORDER BY browse_date ASC;